import {
  ColumnType,
  Generated,
  Insertable,
  JSONColumnType,
  Selectable,
  Updateable,
} from "kysely";

export interface Database {
  user: UserTable;
  images: ImageTable;
}

// This interface describes the `user` table to Kysely. Table
// interfaces should only be used in the `Database` type above
// and never as a result type of a query!. See the `Person`,
// `NewPerson` and `PersonUpdate` types below.
export interface UserTable {
  // Columns that are generated by the database should be marked
  // using the `Generated` type. This way they are automatically
  // made optional in inserts and updates.
  user_id: Generated<number>;
  email: string;
  full_name: string;
  password: string;
}

// You should not use the table schema interfaces directly. Instead, you should
// use the `Selectable`, `Insertable` and `Updateable` wrappers. These wrappers
// make sure that the correct types are used in each operation.
//
// Most of the time you should trust the type inference and not use explicit
// types at all. These types can be useful when typing function arguments.
export type User = Selectable<UserTable>;
export type NewUser = Insertable<UserTable>;
export type UserUpdate = Updateable<UserTable>;

export interface ImageTable {
  image_id: Generated<number>;
  image_name: string;
  image_url: string;
  user_id: string;
}

export type Image = Selectable<ImageTable>;
export type NewImage = Insertable<ImageTable>;
export type ImageUpdate = Updateable<ImageTable>;
